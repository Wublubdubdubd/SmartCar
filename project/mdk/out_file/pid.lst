C251 COMPILER V5.60.0,  pid                                                                05/04/25  00:11:16  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\out_file\pid.obj
COMPILER INVOKED BY: D:\C251\C251\BIN\C251.EXE ..\user\pid.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(2,SIZE) BROW
                    -SE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;..
                    -\user;..\code) DEBUG PRINT(.\out_file\pid.lst) TABS(2) OBJECT(.\out_file\pid.obj) 

stmt  level    source

    1          #include "pid.h"
    2          
    3          // 角度PID初始化参数
    4          float angle_KP = 5, angle_KI = 0,angle_KD = 0.0, angle_IMAX = 20, angle_OUTMAX = 50;
    5          float angle_target = 0;
    6          
    7          pid_param_t angle_pid;  // 角度PID
    8          
    9          
   10          /*******************************************************************************
   11          * 函 数 名         : My_Pid_Init
   12          * 函数功能         : PID初始化 
   13          * 输    入         : 无
   14          * 输    出         : 无
   15          *******************************************************************************/
   16          void My_Pid_Init(void)
   17          {
   18   1          Pid_Param_Init(&angle_pid,angle_KP, angle_KI,angle_KD, angle_IMAX, angle_OUTMAX);
   19   1      }
   20          
   21          
   22          /*******************************************************************************
   23          * 函 数 名         : Pid_Param_Init
   24          * 函数功能         : PID参数初始化 
   25          * 输    入         : imax:积分项最大值
   26          * 输    出         : 无
   27          *******************************************************************************/
   28          void Pid_Param_Init(pid_param_t * pid, float kp, float ki, float kd, float imax, float outmax)
   29          {
   30   1          pid->kp        = kp;
   31   1          pid->ki        = ki;
   32   1          pid->kd        = kd;
   33   1          pid->imax      = imax;
   34   1          pid->out_p     = 0;
   35   1          pid->out_i     = 0;
   36   1          pid->out_d     = 0;
   37   1          pid->out       = 0;
   38   1          pid->outmax    = outmax;
   39   1          pid->integrator= 0;
   40   1          pid->last_error= 0;
   41   1          pid->last_derivative   = 0;
   42   1          pid->last_t    = 0;
   43   1      }
   44          
   45          /*******************************************************************************
   46          * 函 数 名         : PidLocCtrl
   47          * 函数功能     : 位置式PID控制
   48          * 输    入         : pid, error, t
   49          * 输    出         : float
   50          *******************************************************************************/
   51          float PidLocCtrl(pid_param_t * pid, float error, float t)
   52          {
   53   1          /* 累积误差 */
   54   1          pid->integrator += error;
   55   1      
   56   1          /* 误差限幅 */
   57   1          pid->out_i = constrain_float(pid->integrator, -pid->imax, pid->imax);
C251 COMPILER V5.60.0,  pid                                                                05/04/25  00:11:16  PAGE 2   

   58   1      
   59   1      
   60   1          pid->out_p = pid->kp * error;
   61   1          pid->out_i = pid->ki * t * pid->integrator;
   62   1          pid->out_d = pid->kd/t * (error - pid->last_error);
   63   1      
   64   1          pid->last_error = error;
   65   1      
   66   1          pid->out = pid->out_p + pid->out_i + pid->out_d;
   67   1      
   68   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
   69   1      
   70   1          return pid->out;
   71   1      }
   72          
   73          
   74          /*******************************************************************************
   75          * 函 数 名         : PidIncCtrl
   76          * 函数功能     : 增量式PID控制
   77          * 输    入         : pid, error, t
   78          * 输    出         : float
   79          *******************************************************************************/
   80          float PidIncCtrl(pid_param_t * pid, float error, float t)
   81          {
   82   1      
   83   1          pid->out_p = pid->kp * (error - pid->last_error);
   84   1          pid->out_i = pid->ki * error * t ;
   85   1          pid->out_d = pid->kd/t * ((error - pid->last_error) - pid->last_derivative);
   86   1      
   87   1          pid->last_derivative = error - pid->last_error;
   88   1          pid->last_error = error;
   89   1      
   90   1          pid->out += pid->out_p + pid->out_i + pid->out_d;
   91   1      
   92   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
   93   1          return pid->out;
   94   1      }
   95          
   96          /*******************************************************************************
   97          * 函 数 名         : constrain_float
   98          * 函数功能         : 浮点型数限幅
   99          * 输    入         : amt,low,high
  100          * 输    出         : float
  101          *******************************************************************************/
  102          float constrain_float(float amt, float low, float high)
  103          {
  104   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  105   1      }
  106          
  107          /*******************************************************************************
  108          * 函 数 名         : constrain_short
  109          * 函数功能         : 短整型数限幅
  110          * 输    入         : amt,low,high
  111          * 输    出         : short
  112          *******************************************************************************/
  113          short constrain_short(short amt, short low, short high)
  114          {
  115   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  116   1      }
  117          
  118          /*******************************************************************************
  119          * 函 数 名         : constrain_uint32
  120          * 函数功能         : 限幅
  121          * 输    入         : amt,low,high
  122          * 输    出         : uint32
  123          *******************************************************************************/
C251 COMPILER V5.60.0,  pid                                                                05/04/25  00:11:16  PAGE 3   

  124          unsigned long constrain_uint32(float amt)
  125          {
  126   1          return ((amt)<(0)?(0):((amt)>(max_duty)?(max_duty):(amt)));
  127   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1793     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       146     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
