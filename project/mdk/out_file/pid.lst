C251 COMPILER V5.60.0,  pid                                                                05/05/25  18:01:34  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\out_file\pid.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\user\pid.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(2,SIZE) B
                    -ROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver
                    -;..\user;..\code) DEBUG PRINT(.\out_file\pid.lst) TABS(2) OBJECT(.\out_file\pid.obj) 

stmt  level    source

    1          #include "pid.h"
    2          
    3          // 角度PID初始化参数
    4          float angle_KP = 1.0, angle_KI = 0.5,angle_KD = 1.0, angle_IMAX = 20, angle_OUTMAX = 100;
    5          
    6          pid_param_t angle_pid; //角度PID
    7          float angle_target = 0;//角度输入
    8          float angle_error = 0; //角度误差
    9          
   10          // 速度PID初始化参数
   11          float velocity_KP = 10.0, velocity_KI = 0,velocity_KD = 0, velocity_IMAX = 0, velocity_OUTMAX = 100;
   12          
   13          pid_param_t velocity_pid; //角度PID
   14          float velocity_target = 1;//角度输入
   15          float velocity_error = 0; //角度误差
   16          
   17          
   18          float Angle_Pid_fun(float dt)
   19          {  
   20   1          angle_error = angle_target - yaw;
   21   1          //角度环
   22   1          PidLocCtrl(&angle_pid,angle_error, dt);
   23   1        
   24   1          return angle_pid.out;
   25   1      }
   26          
   27          float Velocity_Pid_fun(float dt)
   28          {  
   29   1          velocity_error = velocity_target - x_v;
   30   1          //角度环
   31   1          PidLocCtrl(&velocity_pid,velocity_error, dt);
   32   1        
   33   1          return velocity_pid.out;
   34   1      }
   35          
   36          /*******************************************************************************
   37          * 函 数 名         : My_Pid_Init
   38          * 函数功能         : PID初始化 
   39          * 输    入         : 无
   40          * 输    出         : 无
   41          *******************************************************************************/
   42          void My_Pid_Init(void)
   43          {
   44   1          Pid_Param_Init(&angle_pid,angle_KP, angle_KI,angle_KD, angle_IMAX, angle_OUTMAX);
   45   1          Pid_Param_Init(&velocity_pid,velocity_KP, velocity_KI,velocity_KD, velocity_IMAX, velocity_OUTMAX);
   46   1      }
   47          
   48          
   49          /*******************************************************************************
   50          * 函 数 名         : Pid_Param_Init
   51          * 函数功能         : PID参数初始化 
   52          * 输    入         : imax:积分项最大值
   53          * 输    出         : 无
   54          *******************************************************************************/
   55          void Pid_Param_Init(pid_param_t * pid, float kp, float ki, float kd, float imax, float outmax)
   56          {
   57   1          pid->kp        = kp;
C251 COMPILER V5.60.0,  pid                                                                05/05/25  18:01:34  PAGE 2   

   58   1          pid->ki        = ki;
   59   1          pid->kd        = kd;
   60   1          pid->imax      = imax;
   61   1          pid->out_p     = 0;
   62   1          pid->out_i     = 0;
   63   1          pid->out_d     = 0;
   64   1          pid->out       = 0;
   65   1          pid->outmax    = outmax;
   66   1          pid->integrator= 0;
   67   1          pid->last_error= 0;
   68   1          pid->last_derivative   = 0;
   69   1          pid->last_t    = 0;
   70   1      }
   71          
   72          /*******************************************************************************
   73          * 函 数 名         : PidLocCtrl
   74          * 函数功能     : 位置式PID控制
   75          * 输    入         : pid, error, t
   76          * 输    出         : float
   77          *******************************************************************************/
   78          float PidLocCtrl(pid_param_t * pid, float error, float t)
   79          {
   80   1          /* 累积误差 */
   81   1          pid->integrator += error;
   82   1      
   83   1          /* 误差限幅 */
   84   1          pid->out_i = constrain_float(pid->integrator, -pid->imax, pid->imax);
   85   1      
   86   1      
   87   1          pid->out_p = pid->kp * error;
   88   1          pid->out_i = pid->ki * t * pid->integrator;
   89   1          pid->out_d = pid->kd/t * (error - pid->last_error);
   90   1      
   91   1          pid->last_error = error;
   92   1      
   93   1          pid->out = pid->out_p + pid->out_i + pid->out_d;
   94   1      
   95   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
   96   1      
   97   1          return pid->out;
   98   1      }
   99          
  100          
  101          /*******************************************************************************
  102          * 函 数 名         : PidIncCtrl
  103          * 函数功能     : 增量式PID控制
  104          * 输    入         : pid, error, t
  105          * 输    出         : float
  106          *******************************************************************************/
  107          float PidIncCtrl(pid_param_t * pid, float error, float t)
  108          {
  109   1      
  110   1          pid->out_p = pid->kp * (error - pid->last_error);
  111   1          pid->out_i = pid->ki * error * t ;
  112   1          pid->out_d = pid->kd/t * ((error - pid->last_error) - pid->last_derivative);
  113   1      
  114   1          pid->last_derivative = error - pid->last_error;
  115   1          pid->last_error = error;
  116   1      
  117   1          pid->out += pid->out_p + pid->out_i + pid->out_d;
  118   1      
  119   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
  120   1          return pid->out;
  121   1      }
  122          
  123          /*******************************************************************************
C251 COMPILER V5.60.0,  pid                                                                05/05/25  18:01:34  PAGE 3   

  124          * 函 数 名         : constrain_float
  125          * 函数功能         : 浮点型数限幅
  126          * 输    入         : amt,low,high
  127          * 输    出         : float
  128          *******************************************************************************/
  129          float constrain_float(float amt, float low, float high)
  130          {
  131   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  132   1      }
  133          
  134          /*******************************************************************************
  135          * 函 数 名         : constrain_short
  136          * 函数功能         : 短整型数限幅
  137          * 输    入         : amt,low,high
  138          * 输    出         : short
  139          *******************************************************************************/
  140          short constrain_short(short amt, short low, short high)
  141          {
  142   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  143   1      }
  144          
  145          /*******************************************************************************
  146          * 函 数 名         : constrain_uint32
  147          * 函数功能         : 限幅
  148          * 输    入         : amt,low,high
  149          * 输    出         : uint32
  150          *******************************************************************************/
  151          unsigned long constrain_uint32(float amt)
  152          {
  153   1          return ((amt)<(500)?(500):((amt)>(max_duty)?(max_duty):(amt)));
  154   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2092     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       238     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       126     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
