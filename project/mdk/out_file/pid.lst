C251 COMPILER V5.60.0,  pid                                                                29/03/25  00:53:11  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE pid
OBJECT MODULE PLACED IN .\out_file\pid.obj
COMPILER INVOKED BY: D:\C251\C251\BIN\C251.EXE ..\user\pid.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(2,SIZE) BROW
                    -SE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;..
                    -\user;..\code) DEBUG PRINT(.\out_file\pid.lst) TABS(2) OBJECT(.\out_file\pid.obj) 

stmt  level    source

    1          #include "pid.h"
    2          
    3          // 电机PID初始化参数
    4          float speed_KP = 50, speed_KI = 0,speed_KD = 0.0, speed_IMAX = 5000.0, speed_OUTMAX = 5000.0;
    5          float speed_target = 30.0;
    6          float speed_real = 0.0;
    7          float speed_pwm = 0.0;
    8          
    9          pid_param_t speed_pid_l;  // 电机PID
   10          pid_param_t speed_pid_r;  // 电机PID
   11          
   12          /*******************************************************************************
   13          * 函 数 名         : My_Pid_Init
   14          * 函数功能         : PID初始化 
   15          * 输    入         : 无
   16          * 输    出         : 无
   17          *******************************************************************************/
   18          void My_Pid_Init(void)
   19          {
   20   1          Pid_Param_Init(&speed_pid_l, speed_KP, speed_KI,speed_KD, speed_IMAX, speed_OUTMAX);
   21   1          Pid_Param_Init(&speed_pid_r, speed_KP, speed_KI,speed_KD, speed_IMAX, speed_OUTMAX);
   22   1      }
   23          
   24          
   25          /*******************************************************************************
   26          * 函 数 名         : Pid_Param_Init
   27          * 函数功能         : PID参数初始化 
   28          * 输    入         : imax:积分项最大值
   29          * 输    出         : 无
   30          *******************************************************************************/
   31          void Pid_Param_Init(pid_param_t * pid, float kp, float ki, float kd, float imax, float outmax)
   32          {
   33   1          pid->kp        = kp;
   34   1          pid->ki        = ki;
   35   1          pid->kd        = kd;
   36   1          pid->imax      = imax;
   37   1          pid->out_p     = 0;
   38   1          pid->out_i     = 0;
   39   1          pid->out_d     = 0;
   40   1          pid->out       = 0;
   41   1          pid->outmax    = outmax;
   42   1          pid->integrator= 0;
   43   1          pid->last_error= 0;
   44   1          pid->last_derivative   = 0;
   45   1          pid->last_t    = 0;
   46   1      }
   47          
   48          /*******************************************************************************
   49          * 函 数 名         : PidLocCtrl
   50          * 函数功能     : 位置式PID控制
   51          * 输    入         : pid, error, t
   52          * 输    出         : float
   53          *******************************************************************************/
   54          float PidLocCtrl(pid_param_t * pid, float error, float t)
   55          {
   56   1          /* 累积误差 */
   57   1          pid->integrator += error;
C251 COMPILER V5.60.0,  pid                                                                29/03/25  00:53:11  PAGE 2   

   58   1      
   59   1          /* 误差限幅 */
   60   1          pid->out_i = constrain_float(pid->integrator, -pid->imax, pid->imax);
   61   1      
   62   1      
   63   1          pid->out_p = pid->kp * error;
   64   1          pid->out_i = pid->ki * t * pid->integrator;
   65   1          pid->out_d = pid->kd/t * (error - pid->last_error);
   66   1      
   67   1          pid->last_error = error;
   68   1      
   69   1          pid->out = pid->out_p + pid->out_i + pid->out_d;
   70   1      
   71   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
   72   1      
   73   1          return pid->out;
   74   1      }
   75          
   76          
   77          /*******************************************************************************
   78          * 函 数 名         : PidIncCtrl
   79          * 函数功能     : 增量式PID控制
   80          * 输    入         : pid, error, t
   81          * 输    出         : float
   82          *******************************************************************************/
   83          float PidIncCtrl(pid_param_t * pid, float error, float t)
   84          {
   85   1      
   86   1          pid->out_p = pid->kp * (error - pid->last_error);
   87   1          pid->out_i = pid->ki * error * t ;
   88   1          pid->out_d = pid->kd/t * ((error - pid->last_error) - pid->last_derivative);
   89   1      
   90   1          pid->last_derivative = error - pid->last_error;
   91   1          pid->last_error = error;
   92   1      
   93   1          pid->out += pid->out_p + pid->out_i + pid->out_d;
   94   1      
   95   1          pid->out = constrain_float(pid->out, -pid->outmax, pid->outmax);
   96   1          return pid->out;
   97   1      }
   98          
   99          /*******************************************************************************
  100          * 函 数 名         : constrain_float
  101          * 函数功能         : 浮点型数限幅
  102          * 输    入         : amt,low,high
  103          * 输    出         : float
  104          *******************************************************************************/
  105          float constrain_float(float amt, float low, float high)
  106          {
  107   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  108   1      }
  109          
  110          /*******************************************************************************
  111          * 函 数 名         : constrain_short
  112          * 函数功能         : 短整型数限幅
  113          * 输    入         : amt,low,high
  114          * 输    出         : short
  115          *******************************************************************************/
  116          short constrain_short(short amt, short low, short high)
  117          {
  118   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
  119   1      }
  120          


Module Information          Static   Overlayable
------------------------------------------------
C251 COMPILER V5.60.0,  pid                                                                29/03/25  00:53:11  PAGE 3   

  code size            =      1820     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       202     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        72     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
