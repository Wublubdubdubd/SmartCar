C251 COMPILER V5.60.0,  gps                                                                05/05/25  16:06:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE gps
OBJECT MODULE PLACED IN .\out_file\gps.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\user\gps.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(2,SIZE) B
                    -ROWSE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver
                    -;..\user;..\code) DEBUG PRINT(.\out_file\gps.lst) TABS(2) OBJECT(.\out_file\gps.obj) 

stmt  level    source

    1          #include "gps.h"
    2          
    3          bit gps_date_ready=0;//gps数据是否解析完成
    4          
    5          double target_point[2] = {0};//目标点的经、纬度
    6          
    7          uint8* pObject = NULL; //指向当前科目目标点数组的指针
    8          /*
    9          
   10          科目1 使用四个点
   11          
   12          数组保存：点在EEPROM内的偏移地址
   13          
   14          使用方法： ReadPoint(Object_xxx_index[y]); 
   15          
   16          即可获取第 y + 1 个点的经、纬度
   17          
   18          */
   19          
   20          uint8 Object_one_index[4] = {0, point_size, 2 * point_size, 3 * point_size};
   21          uint8 PID_param_index[3] = {4 * point_size, 5 * point_size, 6 * point_size};
   22          
   23          
   24          //将当前点写入eeprom
   25          void WritePoint(uint8 offset)
   26          {
   27   1        //iap_write_buff(offset, (uint8 *)&gps_tau1201.latitude, point_size);
   28   1        W25Q_PageProgram_32(offset, (uint8 *)&gps_tau1201.latitude, point_size);
   29   1      }
   30          
   31          //从eeprom读取点作为目标点
   32          void ReadPoint(uint8 offset)
   33          {
   34   1        //iap_read_buff(offset, (uint8 *)target_point, point_size);
   35   1        W25Q_FastRead_6B(offset, (uint8 *)target_point, point_size);
   36   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        70     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        29     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         1     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        47     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
