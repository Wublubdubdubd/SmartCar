C251 COMPILER V5.60.0,  gps                                                                10/05/25  10:23:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE gps
OBJECT MODULE PLACED IN .\out_file\gps.obj
COMPILER INVOKED BY: D:\C251\C251\BIN\C251.EXE ..\user\gps.c LARGE NOALIAS FLOAT64 WARNINGLEVEL(3) OPTIMIZE(2,SIZE) BROW
                    -SE INCDIR(..\..\libraries\zf_common;..\..\libraries\zf_components;..\..\libraries\zf_device;..\..\libraries\zf_driver;..
                    -\user;..\code) DEBUG PRINT(.\out_file\gps.lst) TABS(2) OBJECT(.\out_file\gps.obj) 

stmt  level    source

    1          #include "gps.h"
    2          
    3          bit gps_date_ready=0;//gps数据是否解析完成
    4          
    5          double target_point[2] = {0};//目标点的经、纬度
    6          
    7          double target_distance = 0; //当前点到目标点的距离
    8          
    9          double gps_point_error[2]={0};//两次上电后的GPS点相对误差
   10          
   11          uint8* pObject = NULL; //指向当前科目目标点数组的指针
   12          uint8 cur_point_num = 0; //当前装载点的序号
   13          uint8 cur_object_num = 0; //当前科目点的数目
   14          uint8 write_index = 0; //打点索引，测试用
   15          bit is_erase = 0;//擦除与否
   16          /*
   17          
   18          科目1 使用四个点
   19          
   20          数组保存：点在EEPROM内的偏移地址
   21          
   22          使用方法： ReadPoint(Object_xxx_index[y]); 
   23          
   24          即可获取第 y + 1 个点的经、纬度
   25          
   26          */
   27          const uint8 Object_one_num = 4; // 科目一的点数
   28          uint8 Object_one_index[4] = {0 , 1 , 2 , 3}; // FLASH中的索引
   29          
   30          
   31          //将当前点写入eeprom
   32          void WritePoint(uint8 offset)
   33          {
   34   1        W25Q_PageProgram_32(offset , (uint8 *)&gps_tau1201.latitude, point_size);
   35   1      }
   36          
   37          //从flash读取上一次目标点
   38          void LoadPoint()
   39          {
   40   1        uint16 offset;
   41   1        
   42   1        if(cur_point_num == cur_object_num) return;//到达最后一个点，不再装载，准备更换科目
   43   1        
   44   1        offset = pObject[cur_point_num];
   45   1        
   46   1        W25Q_FastRead_6B(offset * point_size, (uint8 *)target_point, point_size);
   47   1        
   48   1        cur_point_num ++ ;
   49   1        
   50   1        //修正
   51   1        target_point[0] += gps_point_error[0];
   52   1        target_point[1] += gps_point_error[1];
   53   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       236     ------
C251 COMPILER V5.60.0,  gps                                                                10/05/25  10:23:48  PAGE 2   

  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        54     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        92     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
